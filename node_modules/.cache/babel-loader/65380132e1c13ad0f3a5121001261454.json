{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ninew/test/src/compenents/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button } from '@material-ui/core';\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles({\n  root: {\n    width: 800\n  }\n});\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nexport default function DiscreteSlider() {\n  _s();\n\n  const classes = useStyles();\n  const marks = [{\n    value: 0\n  }, {\n    value: 100\n  }];\n  const [value, setValue] = React.useState([20, 37]);\n\n  const handleChange = (event, newValue) => {\n    if (newValue[0] < value[1]) {\n      setValue([newValue[0], value[1]]);\n\n      if (newValue[1] > value[0]) {\n        console.log(newValue);\n        setValue([value[0], newValue[1]]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"discrete-slider-small-steps\",\n      gutterBottom: true,\n      children: [\"min\", value[0], \" max\", value[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: value,\n      onChange: handleChange,\n      valueLabelDisplay: \"auto\",\n      \"aria-labelledby\": \"range-slider\",\n      getAriaValueText: valuetext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DiscreteSlider, \"t3TVHkgh0xNx9bA89EPmzzurF1c=\", false, function () {\n  return [useStyles];\n});\n\n_c = DiscreteSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiscreteSlider\");","map":{"version":3,"sources":["/Users/ninew/test/src/compenents/Slider.js"],"names":["React","useState","makeStyles","Typography","Button","Slider","useStyles","root","width","valuetext","value","DiscreteSlider","classes","marks","setValue","handleChange","event","newValue","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,UAAR,EAAmBC,MAAnB,QAAgC,mBAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADqB,CAAD,CAA5B;;AAMA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAQ,GAAEA,KAAM,IAAhB;AACD;;AAED,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,KAAK,GAAG,CACV;AACEH,IAAAA,KAAK,EAAE;AADT,GADU,EAKV;AACEA,IAAAA,KAAK,EAAE;AADT,GALU,CAAd;AAYA,QAAM,CAACA,KAAD,EAAQI,QAAR,IAAoBd,KAAK,CAACC,QAAN,CAAe,CAAC,EAAD,EAAK,EAAL,CAAf,CAA1B;;AACA,QAAMc,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAGtC,QAAIA,QAAQ,CAAC,CAAD,CAAR,GAAcP,KAAK,CAAC,CAAD,CAAvB,EAA4B;AACxBI,MAAAA,QAAQ,CAAC,CAACG,QAAQ,CAAC,CAAD,CAAT,EAAcP,KAAK,CAAC,CAAD,CAAnB,CAAD,CAAR;;AACA,UAAIO,QAAQ,CAAC,CAAD,CAAR,GAAcP,KAAK,CAAC,CAAD,CAAvB,EAA4B;AACxBQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,QAAAA,QAAQ,CAAC,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAUO,QAAQ,CAAC,CAAD,CAAlB,CAAD,CAAR;AACH;AACJ;AAMJ,GAfD;;AAiBF,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACL,IAAxB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,6BAAf;AAA6C,MAAA,YAAY,MAAzD;AAAA,wBACYG,KAAK,CAAC,CAAD,CADjB,UAC0BA,KAAK,CAAC,CAAD,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOM,QAAC,MAAD;AACF,MAAA,KAAK,EAAEA,KADL;AAEF,MAAA,QAAQ,EAAEK,YAFR;AAGF,MAAA,iBAAiB,EAAC,MAHhB;AAIF,yBAAgB,cAJd;AAKF,MAAA,gBAAgB,EAAEN;AALhB;AAAA;AAAA;AAAA;AAAA,YAPN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjDuBE,c;UACJL,S;;;KADIK,c","sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Typography,Button} from '@material-ui/core';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 800,\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nexport default function DiscreteSlider() {\n    const classes = useStyles();\n    const marks = [\n        {\n          value: 0,\n\n        },\n        {\n          value: 100,\n  \n        },\n      ];\n      \n\n    const [value, setValue] = React.useState([20, 37]);\n    const handleChange = (event, newValue) => {\n \n     \n        if (newValue[0] < value[1]) {\n            setValue([newValue[0], value[1]])\n            if (newValue[1] > value[0]) {\n                console.log(newValue)\n                setValue([value[0],newValue[1]])\n            }\n        }\n       \n        \n     \n\n      \n    };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n              min{value[0]} max{value[1]}\n              \n          </Typography>\n        \n \n          <Slider\n        value={value}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}